{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "from aequitas.preprocessing import preprocess_input_df\n",
    "from aequitas.group import Group\n",
    "from aequitas.bias import Bias\n",
    "from aequitas.fairness import Fairness"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>entity_id</th>\n",
       "      <th>score</th>\n",
       "      <th>label_value</th>\n",
       "      <th>race</th>\n",
       "      <th>sex</th>\n",
       "      <th>age_cat</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>Other</td>\n",
       "      <td>Male</td>\n",
       "      <td>Greater than 45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>African-American</td>\n",
       "      <td>Male</td>\n",
       "      <td>25 - 45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>African-American</td>\n",
       "      <td>Male</td>\n",
       "      <td>Less than 25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>African-American</td>\n",
       "      <td>Male</td>\n",
       "      <td>Less than 25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>6</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>Other</td>\n",
       "      <td>Male</td>\n",
       "      <td>25 - 45</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   entity_id  score  label_value              race   sex          age_cat\n",
       "0          1    0.0            0             Other  Male  Greater than 45\n",
       "1          3    0.0            1  African-American  Male          25 - 45\n",
       "2          4    0.0            1  African-American  Male     Less than 25\n",
       "3          5    1.0            0  African-American  Male     Less than 25\n",
       "4          6    0.0            0             Other  Male          25 - 45"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv(\"../../../examples/data/compas_for_aequitas.csv\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "from random import random\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['rand'] = [100*random() for i in range(df.shape[0])]\n",
    "labels = [ \"{0} - {1}\".format(i, i + 9) for i in range(0, 100, 10) ]\n",
    "df['group'] = pd.cut(df.rand, range(0, 105, 10), right=False, labels=labels)\n",
    "df = df.drop(columns=['rand'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['group'] = df['group'].astype(str)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "model_id, score_thresholds 1 {'rank_abs': [3317]}\n",
      "COUNTS::: race\n",
      "African-American    3696\n",
      "Asian                 32\n",
      "Caucasian           2454\n",
      "Hispanic             637\n",
      "Native American       18\n",
      "Other                377\n",
      "dtype: int64\n",
      "COUNTS::: sex\n",
      "Female    1395\n",
      "Male      5819\n",
      "dtype: int64\n",
      "COUNTS::: age_cat\n",
      "25 - 45            4109\n",
      "Greater than 45    1576\n",
      "Less than 25       1529\n",
      "dtype: int64\n",
      "COUNTS::: group\n",
      "0 - 9      673\n",
      "10 - 19    725\n",
      "20 - 29    718\n",
      "30 - 39    729\n",
      "40 - 49    747\n",
      "50 - 59    687\n",
      "60 - 69    712\n",
      "70 - 79    738\n",
      "80 - 89    717\n",
      "90 - 99    741\n",
      "nan         27\n",
      "dtype: int64\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(   attribute_name   attribute_value     k  model_id score_threshold       tpr  \\\n",
       " 0            race  African-American  3317         1      binary 0/1  0.720147   \n",
       " 1            race             Asian  3317         1      binary 0/1  0.666667   \n",
       " 2            race         Caucasian  3317         1      binary 0/1  0.522774   \n",
       " 3            race          Hispanic  3317         1      binary 0/1  0.443966   \n",
       " 4            race   Native American  3317         1      binary 0/1  0.900000   \n",
       " 5            race             Other  3317         1      binary 0/1  0.323308   \n",
       " 6             sex            Female  3317         1      binary 0/1  0.608434   \n",
       " 7             sex              Male  3317         1      binary 0/1  0.629132   \n",
       " 8         age_cat           25 - 45  3317         1      binary 0/1  0.626257   \n",
       " 9         age_cat   Greater than 45  3317         1      binary 0/1  0.427711   \n",
       " 10        age_cat      Less than 25  3317         1      binary 0/1  0.739583   \n",
       " 11          group             0 - 9  3317         1      binary 0/1  0.622951   \n",
       " 12          group           10 - 19  3317         1      binary 0/1  0.628399   \n",
       " 13          group           20 - 29  3317         1      binary 0/1  0.622024   \n",
       " 14          group           30 - 39  3317         1      binary 0/1  0.582555   \n",
       " 15          group           40 - 49  3317         1      binary 0/1  0.633721   \n",
       " 16          group           50 - 59  3317         1      binary 0/1  0.628664   \n",
       " 17          group           60 - 69  3317         1      binary 0/1  0.643312   \n",
       " 18          group           70 - 79  3317         1      binary 0/1  0.647436   \n",
       " 19          group           80 - 89  3317         1      binary 0/1  0.612698   \n",
       " 20          group           90 - 99  3317         1      binary 0/1  0.629944   \n",
       " 21          group               nan  3317         1      binary 0/1  0.833333   \n",
       " \n",
       "          tnr       for       fdr       fpr    ...        pprev   fp    fn  \\\n",
       " 0   0.551532  0.349540  0.370285  0.448468    ...     0.588203  805   532   \n",
       " 1   0.913043  0.125000  0.250000  0.086957    ...     0.250000    2     3   \n",
       " 2   0.765457  0.288125  0.408665  0.234543    ...     0.348003  349   461   \n",
       " 3   0.785185  0.288591  0.457895  0.214815    ...     0.298273   87   129   \n",
       " 4   0.625000  0.166667  0.250000  0.375000    ...     0.666667    3     1   \n",
       " 5   0.852459  0.302013  0.455696  0.147541    ...     0.209549   36    90   \n",
       " 6   0.678930  0.242537  0.487310  0.321070    ...     0.423656  288   195   \n",
       " 7   0.675799  0.330100  0.364637  0.324201    ...     0.468465  994  1021   \n",
       " 8   0.666216  0.323112  0.385135  0.333784    ...     0.468240  741   706   \n",
       " 9   0.832096  0.241117  0.459391  0.167904    ...     0.250000  181   285   \n",
       " 10  0.458647  0.424528  0.360360  0.541353    ...     0.653368  360   225   \n",
       " 11  0.703804  0.307487  0.364548  0.296196    ...     0.444279  109   115   \n",
       " 12  0.652284  0.323684  0.397101  0.347716    ...     0.475862  137   123   \n",
       " 13  0.678010  0.329016  0.370482  0.321990    ...     0.462396  123   127   \n",
       " 14  0.659314  0.332506  0.426380  0.340686    ...     0.447188  139   134   \n",
       " 15  0.660050  0.321429  0.385915  0.339950    ...     0.475234  137   126   \n",
       " 16  0.713158  0.296104  0.360927  0.286842    ...     0.439592  109   114   \n",
       " 17  0.693467  0.288660  0.376543  0.306533    ...     0.455056  122   112   \n",
       " 18  0.654930  0.282776  0.421203  0.345070    ...     0.472900  147   110   \n",
       " 19  0.691542  0.305000  0.391167  0.308458    ...     0.442120  124   122   \n",
       " 20  0.661499  0.338501  0.370056  0.338501    ...     0.477733  131   131   \n",
       " 21  0.733333  0.153846  0.285714  0.266667    ...     0.518519    4     2   \n",
       " \n",
       "       tn    tp  group_label_neg  group_label_pos  group_size  total_entities  \\\n",
       " 0    990  1369             1795             1901        3696            7214   \n",
       " 1     21     6               23                9          32            7214   \n",
       " 2   1139   505             1488              966        2454            7214   \n",
       " 3    318   103              405              232         637            7214   \n",
       " 4      5     9                8               10          18            7214   \n",
       " 5    208    43              244              133         377            7214   \n",
       " 6    609   303              897              498        1395            7214   \n",
       " 7   2072  1732             3066             2753        5819            7214   \n",
       " 8   1479  1183             2220             1889        4109            7214   \n",
       " 9    897   213             1078              498        1576            7214   \n",
       " 10   305   639              665              864        1529            7214   \n",
       " 11   259   190              368              305         673            7214   \n",
       " 12   257   208              394              331         725            7214   \n",
       " 13   259   209              382              336         718            7214   \n",
       " 14   269   187              408              321         729            7214   \n",
       " 15   266   218              403              344         747            7214   \n",
       " 16   271   193              380              307         687            7214   \n",
       " 17   276   202              398              314         712            7214   \n",
       " 18   279   202              426              312         738            7214   \n",
       " 19   278   193              402              315         717            7214   \n",
       " 20   256   223              387              354         741            7214   \n",
       " 21    11    10               15               12          27            7214   \n",
       " \n",
       "         prev  \n",
       " 0   0.514340  \n",
       " 1   0.281250  \n",
       " 2   0.393643  \n",
       " 3   0.364207  \n",
       " 4   0.555556  \n",
       " 5   0.352785  \n",
       " 6   0.356989  \n",
       " 7   0.473105  \n",
       " 8   0.459723  \n",
       " 9   0.315990  \n",
       " 10  0.565075  \n",
       " 11  0.453195  \n",
       " 12  0.456552  \n",
       " 13  0.467967  \n",
       " 14  0.440329  \n",
       " 15  0.460509  \n",
       " 16  0.446870  \n",
       " 17  0.441011  \n",
       " 18  0.422764  \n",
       " 19  0.439331  \n",
       " 20  0.477733  \n",
       " 21  0.444444  \n",
       " \n",
       " [22 rows x 26 columns],\n",
       " Index(['race', 'sex', 'age_cat', 'group'], dtype='object'))"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "g = Group()\n",
    "#dfp, _ = preprocess_input_df(df)\n",
    "g.get_crosstabs(df)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
